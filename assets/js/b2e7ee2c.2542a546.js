"use strict";(self.webpackChunkreality_toolkit=self.webpackChunkreality_toolkit||[]).push([[5807],{8244:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>h});var o=i(5893),n=i(1151);const r={sidebar_position:0},a="What Are Interaction Behaviours?",c={id:"interactions/interaction-behaviours/overview",title:"What Are Interaction Behaviours?",description:"An InteractionBehaviour is a Unity component designed to work with Interactables. It is an atomic piece of code, that implements a specific",source:"@site/docs/03-interactions/03-interaction-behaviours/overview.md",sourceDirName:"03-interactions/03-interaction-behaviours",slug:"/interactions/interaction-behaviours/overview",permalink:"/docs/interactions/interaction-behaviours/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/realitycollective/com.realitytoolkit.docs/edit/main/docs/03-interactions/03-interaction-behaviours/overview.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{sidebar_position:0},sidebar:"docsSidebar",previous:{title:"Interaction Behaviours",permalink:"/docs/category/interaction-behaviours"},next:{title:"Default Behaviours",permalink:"/docs/category/default-behaviours"}},s={},h=[];function d(e){const t={code:"code",h1:"h1",p:"p",...(0,n.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"what-are-interaction-behaviours",children:"What Are Interaction Behaviours?"}),"\n",(0,o.jsxs)(t.p,{children:["An ",(0,o.jsx)(t.code,{children:"InteractionBehaviour"})," is a Unity component designed to work with ",(0,o.jsx)(t.code,{children:"Interactable"}),"s. It is an atomic piece of code, that implements a specific\nbehaviour that you'd expect, when interacting with an ",(0,o.jsx)(t.code,{children:"Interactable"}),". Examples for default interaction behaviours available with the toolkit are\nthe ",(0,o.jsx)(t.code,{children:"GrabBehaviour"})," to make an object grabbable or the ",(0,o.jsx)(t.code,{children:"GrabPoseBehaviour"})," that will animate the hand visualizing ther user's controller into a given pose, when\ngrabbing the object."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"InteractionBehaviour"}),"s can be stacked onto the ",(0,o.jsx)(t.code,{children:"Interactable"})," GameObject to achieve various effects. You can combine multiple ",(0,o.jsx)(t.code,{children:"InteractionBehaviour"}),"s (composition) to achieve your desired interaction reponse. Check the samples to learn more about ",(0,o.jsx)(t.code,{children:"InteractionBehaviour"}),"s are used."]})]})}function l(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>c,a:()=>a});var o=i(7294);const n={},r=o.createContext(n);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);