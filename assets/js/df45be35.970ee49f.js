"use strict";(self.webpackChunkreality_toolkit=self.webpackChunkreality_toolkit||[]).push([[5327],{6949:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>h});var t=i(5893),n=i(1151),r=i(6457);const a=i.p+"assets/images/locomotion-service-profile-b2fc3a7407679ffe2368d39fb07b73f2.png",l={sidebar_position:2},c="Configure The Service",s={id:"locomotion/configure",title:"Configure The Service",description:"Now that the service is registered, let's take a look at configuration options.",source:"@site/docs/04-locomotion/02-configure.mdx",sourceDirName:"04-locomotion",slug:"/locomotion/configure",permalink:"/docs/locomotion/configure",draft:!1,unlisted:!1,editUrl:"https://github.com/realitycollective/com.realitytoolkit.docs/edit/main/docs/04-locomotion/02-configure.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Set Up The Locomotion Service",permalink:"/docs/locomotion/set-up"},next:{title:"Moving Around Freely",permalink:"/docs/locomotion/free-movement"}},d={},h=[{value:"Startup Behaviour",id:"startup-behaviour",level:2},{value:"Locomotion Startup Behaviour",id:"locomotion-startup-behaviour",level:3},{value:"Runtime API",id:"runtime-api",level:4},{value:"Movement Startup Behaviour",id:"movement-startup-behaviour",level:3},{value:"Runtime API",id:"runtime-api-1",level:4},{value:"Teleport Startup Behaviour",id:"teleport-startup-behaviour",level:3},{value:"Runtime API",id:"runtime-api-2",level:4},{value:"Teleport Cooldown",id:"teleport-cooldown",level:2},{value:"Locomotion Service Modules",id:"locomotion-service-modules",level:2}];function u(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"configure-the-service",children:"Configure The Service"}),"\n",(0,t.jsx)(o.p,{children:"Now that the service is registered, let's take a look at configuration options."}),"\n",(0,t.jsx)(r.Z,{src:a,alt:"The locomotion service profile."}),"\n",(0,t.jsx)(o.h2,{id:"startup-behaviour",children:"Startup Behaviour"}),"\n",(0,t.jsx)(o.p,{children:"There is three settings related to locomotion startup behaviour in total."}),"\n",(0,t.jsx)(o.h3,{id:"locomotion-startup-behaviour",children:"Locomotion Startup Behaviour"}),"\n",(0,t.jsxs)(o.p,{children:["This setting defines whether locomotion is enabled or disabled on application launch on a global level. Settings this setting to ",(0,t.jsx)(o.code,{children:"Manual Start"})," will also disable free movement and teleportation on app launch, regardless of their individiual startup behaviour."]}),"\n",(0,t.jsx)(o.h4,{id:"runtime-api",children:"Runtime API"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"ServiceManager.Instance.GetService<ILocomotionService>().LocomotionEnabled = false;\n"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"ServiceManager.Instance.GetService<ILocomotionService>().LocomotionEnabled = true;\n"})}),"\n",(0,t.jsx)(o.h3,{id:"movement-startup-behaviour",children:"Movement Startup Behaviour"}),"\n",(0,t.jsx)(o.p,{children:"This settings defines whether free movement will be available immediately after the application has launched."}),"\n",(0,t.jsx)(o.h4,{id:"runtime-api-1",children:"Runtime API"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"ServiceManager.Instance.GetService<ILocomotionService>().MovementEnabled = false;\n"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"ServiceManager.Instance.GetService<ILocomotionService>().MovementEnabled = true;\n"})}),"\n",(0,t.jsx)(o.h3,{id:"teleport-startup-behaviour",children:"Teleport Startup Behaviour"}),"\n",(0,t.jsx)(o.p,{children:"This settings defines whether teleportation will be available immediately after the application has launched."}),"\n",(0,t.jsx)(o.h4,{id:"runtime-api-2",children:"Runtime API"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"ServiceManager.Instance.GetService<ILocomotionService>().TeleportationEnabled = false;\n"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"ServiceManager.Instance.GetService<ILocomotionService>().TeleportationEnabled = true;\n"})}),"\n",(0,t.jsx)(o.h2,{id:"teleport-cooldown",children:"Teleport Cooldown"}),"\n",(0,t.jsxs)(o.p,{children:["This defaults to ",(0,t.jsx)(o.code,{children:"0"}),", meaning that your player can teleport right after completing a teleportation. Settings this value to e.g. ",(0,t.jsx)(o.code,{children:"1"}),", will induce a one second cooldown phase after a teleport. Your player will only be able to teleport again, once the cooldown phase has ended."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"ServiceManager.Instance.GetService<ILocomotionService>().TeleportCooldownDuration = 1f;\n"})}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-csharp",children:"var isCoolingDown = ServiceManager.Instance.GetService<ILocomotionService>().IsTeleportCoolingDown;\n"})}),"\n",(0,t.jsx)(o.h2,{id:"locomotion-service-modules",children:"Locomotion Service Modules"}),"\n",(0,t.jsx)(o.p,{children:"The locomotion service is powered by a collection of service modules. Each responsible for a specific feature of the overall service. Check the individual module configuraton profiles for advanced configuration options."})]})}function p(e={}){const{wrapper:o}={...(0,n.a)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},6457:(e,o,i)=>{i.d(o,{Z:()=>r});var t=i(5893);const n=e=>(0,t.jsxs)("figure",{className:"flex flex-col",children:[(0,t.jsx)("img",{className:"block",src:e.src,alt:e.alt}),(0,t.jsx)("figcaption",{className:"bg-gray-800 p-4 text-sm",children:e.alt})]}),r=e=>(0,t.jsx)("span",{className:"flex justify-center py-2 md:py-4",children:(0,t.jsx)(n,{...e})})},1151:(e,o,i)=>{i.d(o,{Z:()=>l,a:()=>a});var t=i(7294);const n={},r=t.createContext(n);function a(e){const o=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(r.Provider,{value:o},e.children)}}}]);